============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: anyio-4.7.0, asyncio-0.25.2, cov-6.0.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collecting ... collected 22 items / 6 deselected / 16 selected
run-last-failure: rerun previous 16 failures (skipped 5 files)

tests/test_file_upload.py::test_xls_analyzer_invalid_data FAILED         [  6%]
tests/test_file_upload.py::test_upload_excel_valid FAILED                [ 12%]
tests/test_file_upload.py::test_xls_analyzer_missing_columns FAILED      [ 18%]
tests/test_interfaces.py::test_project_interface FAILED                  [ 25%]
tests/test_models.py::test_model_timestamps FAILED                       [ 31%]
tests/test_repositories.py::test_time_entry_repository_create FAILED     [ 37%]
tests/test_repositories.py::test_time_entry_repository_get_by_id FAILED  [ 43%]
tests/test_repositories.py::test_time_entry_repository_get_by_date FAILED [ 50%]
tests/test_repositories.py::test_time_entry_repository_get_all FAILED    [ 56%]
tests/test_repositories.py::test_time_entry_repository_update FAILED     [ 62%]
tests/test_repositories.py::test_time_entry_repository_delete FAILED     [ 68%]
tests/test_repositories.py::test_time_entry_repository_pagination FAILED [ 75%]
tests/test_routes.py::test_create_time_entry FAILED                      [ 81%]
tests/test_routes.py::test_get_time_entries_with_database_query FAILED   [ 87%]
tests/test_routes.py::test_get_time_entries_complex_filtering FAILED     [ 93%]
tests/test_routes.py::test_upload_excel_valid FAILED                     [100%]

=================================== FAILURES ===================================
________________________ test_xls_analyzer_invalid_data ________________________

tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-3/test_xls_analyzer_invalid_data0')
invalid_timesheet_data = {'Category': ['Development'], 'Date': ['2024-10-07'], 'Hours': [8.0]}

    def test_xls_analyzer_invalid_data(tmp_path, invalid_timesheet_data):
        """Test XLSAnalyzer with invalid data"""
        excel_file = create_test_excel(tmp_path, invalid_timesheet_data)
    
        with open(excel_file, "rb") as f:
            contents = f.read()
            analyzer = XLSAnalyzer()
            records = analyzer.read_excel(contents)
    
            assert len(records) == 1
>           assert records[0]['Customer'] == '-'
E           KeyError: 'Customer'

tests/test_file_upload.py:74: KeyError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:13.338867", "level": "INFO", "correlation_id": "undefined", "logger": "TimesheetTracker", "message": "Successfully parsed 1 records from Excel file", "context": {}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 1 records from Excel file", "timestamp": "2025-02-11T19:36:13.338987", "context": {}}
___________________________ test_upload_excel_valid ____________________________

client = <starlette.testclient.TestClient object at 0x7fa7bd01c6d0>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7fa7bd042010>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}
tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-3/test_upload_excel_valid0')
valid_timesheet_data = {'Category': ['Development', 'Testing'], 'Customer': ['ECOLAB', 'ECOLAB'], 'Date': ['2024-10-07', '2024-10-07'], 'Hours': [8.0, 4.0], ...}

    def test_upload_excel_valid(client, setup_test_data, tmp_path, valid_timesheet_data):
        """Test uploading a valid Excel file"""
        excel_file = create_test_excel(tmp_path, valid_timesheet_data)
    
        with open(excel_file, "rb") as f:
            response = client.post(
                "/time-entries/upload/",
                files={"file": ("test.xlsx", f, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")}
            )
    
        assert response.status_code == 201
        data = response.json()
        assert len(data["entries"]) == 2
>       assert data["validation_errors"] == []
E       KeyError: 'validation_errors'

tests/test_file_upload.py:90: KeyError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:18.075898", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5398", "content-type": "multipart/form-data; boundary=ac5f7605efabfa140ab928b63054c06e"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
{"timestamp": "2025-02-11T19:36:18.078714", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T19:36:18.079220", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T19:36:18.079608", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T19:36:18.094941", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Successfully parsed 2 records from Excel file", "context": {}}
{"timestamp": "2025-02-11T19:36:18.155648", "level": "WARNING", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request failed with status 201", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 201, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "80.17", "response_headers": {"content-length": "588", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T19:36:18.156255", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": null, "method": "POST", "path": "/time-entries/upload/", "status_code": 201}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:18.076045", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5398", "content-type": "multipart/form-data; boundary=ac5f7605efabfa140ab928b63054c06e"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T19:36:18.078942", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T19:36:18.079328", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T19:36:18.079709", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 2 records from Excel file", "timestamp": "2025-02-11T19:36:18.095073", "context": {}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 201", "timestamp": "2025-02-11T19:36:18.155800", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 201, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "80.17", "response_headers": {"content-length": "588", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:18.156353", "context": {"correlation_id": null, "method": "POST", "path": "/time-entries/upload/", "status_code": 201}}
______________________ test_xls_analyzer_missing_columns _______________________

self = Index(['Category', 'Hours'], dtype='object'), key = 'Date'

    def get_loc(self, key):
        """
        Get integer location, slice or boolean mask for requested label.
    
        Parameters
        ----------
        key : label
    
        Returns
        -------
        int if unique index, slice if monotonic index, else mask
    
        Examples
        --------
        >>> unique_index = pd.Index(list('abc'))
        >>> unique_index.get_loc('b')
        1
    
        >>> monotonic_index = pd.Index(list('abbc'))
        >>> monotonic_index.get_loc('b')
        slice(1, 3, None)
    
        >>> non_monotonic_index = pd.Index(list('abcb'))
        >>> non_monotonic_index.get_loc('b')
        array([False,  True, False,  True])
        """
        casted_key = self._maybe_cast_indexer(key)
        try:
>           return self._engine.get_loc(casted_key)

.pythonlibs/lib/python3.11/site-packages/pandas/core/indexes/base.py:3805: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
index.pyx:167: in pandas._libs.index.IndexEngine.get_loc
    ???
index.pyx:196: in pandas._libs.index.IndexEngine.get_loc
    ???
pandas/_libs/hashtable_class_helper.pxi:7081: in pandas._libs.hashtable.PyObjectHashTable.get_item
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   KeyError: 'Date'

pandas/_libs/hashtable_class_helper.pxi:7089: KeyError

The above exception was the direct cause of the following exception:

file_contents = b'PK\x03\x04\x14\x00\x00\x00\x08\x00\x89\x9cKZF\xc7MH\x95\x00\x00\x00\xcd\x00\x00\x00\x10\x00\x00\x00docProps/app.xmlM...\x80\x01\xb9\x0f\x00\x00[Content_Types].xmlPK\x05\x06\x00\x00\x00\x00\t\x00\t\x00>\x02\x00\x00\x03\x11\x00\x00\x00\x00'

    @staticmethod
    def read_excel(file_contents: bytes) -> List[Dict[str, Any]]:
        """Read Excel file and return list of dictionaries with data."""
        try:
            # Read first sheet from Excel file
            df = pd.read_excel(
                file_contents,
                sheet_name=0,
                dtype={
                    'Week Number': 'Int64',
                    'Month': str,
                    'Category': str,
                    'Subcategory': str,
                    'Customer': str,
                    'Project': str,
                    'Task Description': str
                }
            )
    
            # Drop rows where all elements are NaN
            df = df.dropna(how='all')
    
            # Convert date column to datetime
>           df['Date'] = pd.to_datetime(df['Date'], errors='coerce')

utils/xls_analyzer.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.pythonlibs/lib/python3.11/site-packages/pandas/core/frame.py:4102: in __getitem__
    indexer = self.columns.get_loc(key)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Index(['Category', 'Hours'], dtype='object'), key = 'Date'

    def get_loc(self, key):
        """
        Get integer location, slice or boolean mask for requested label.
    
        Parameters
        ----------
        key : label
    
        Returns
        -------
        int if unique index, slice if monotonic index, else mask
    
        Examples
        --------
        >>> unique_index = pd.Index(list('abc'))
        >>> unique_index.get_loc('b')
        1
    
        >>> monotonic_index = pd.Index(list('abbc'))
        >>> monotonic_index.get_loc('b')
        slice(1, 3, None)
    
        >>> non_monotonic_index = pd.Index(list('abcb'))
        >>> non_monotonic_index.get_loc('b')
        array([False,  True, False,  True])
        """
        casted_key = self._maybe_cast_indexer(key)
        try:
            return self._engine.get_loc(casted_key)
        except KeyError as err:
            if isinstance(casted_key, slice) or (
                isinstance(casted_key, abc.Iterable)
                and any(isinstance(x, slice) for x in casted_key)
            ):
                raise InvalidIndexError(key)
>           raise KeyError(key) from err
E           KeyError: 'Date'

.pythonlibs/lib/python3.11/site-packages/pandas/core/indexes/base.py:3812: KeyError

During handling of the above exception, another exception occurred:

tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-3/test_xls_analyzer_missing_colu0')

    def test_xls_analyzer_missing_columns(tmp_path):
        """Test XLSAnalyzer with missing required columns"""
        data = {'Category': ['Test'], 'Hours': [8.0]}
        excel_file = create_test_excel(tmp_path, data)
    
        with open(excel_file, "rb") as f:
            contents = f.read()
            analyzer = XLSAnalyzer()
>           records = analyzer.read_excel(contents)

tests/test_file_upload.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

file_contents = b'PK\x03\x04\x14\x00\x00\x00\x08\x00\x89\x9cKZF\xc7MH\x95\x00\x00\x00\xcd\x00\x00\x00\x10\x00\x00\x00docProps/app.xmlM...\x80\x01\xb9\x0f\x00\x00[Content_Types].xmlPK\x05\x06\x00\x00\x00\x00\t\x00\t\x00>\x02\x00\x00\x03\x11\x00\x00\x00\x00'

    @staticmethod
    def read_excel(file_contents: bytes) -> List[Dict[str, Any]]:
        """Read Excel file and return list of dictionaries with data."""
        try:
            # Read first sheet from Excel file
            df = pd.read_excel(
                file_contents,
                sheet_name=0,
                dtype={
                    'Week Number': 'Int64',
                    'Month': str,
                    'Category': str,
                    'Subcategory': str,
                    'Customer': str,
                    'Project': str,
                    'Task Description': str
                }
            )
    
            # Drop rows where all elements are NaN
            df = df.dropna(how='all')
    
            # Convert date column to datetime
            df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
    
            # Fill NaN values with appropriate defaults
            df = df.fillna({
                'Customer': '-',
                'Project': '-',
                'Task Description': '',
                'Week Number': 0,
                'Month': '',
                'Category': 'Other',
                'Subcategory': 'Other'
            })
    
            # Convert DataFrame to list of dictionaries
            records = df.to_dict('records')
    
            logger.info(f"Successfully parsed {len(records)} records from Excel file")
            return records
    
        except Exception as e:
            logger.error(f"Error parsing Excel file: {str(e)}")
>           raise ValueError(f"Failed to parse Excel file: {str(e)}")
E           ValueError: Failed to parse Excel file: 'Date'

utils/xls_analyzer.py:54: ValueError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:18.190013", "level": "ERROR", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Error parsing Excel file: 'Date'", "context": {}}
------------------------------ Captured log call -------------------------------
ERROR    TimesheetTracker:logger.py:32 {"message": "Error parsing Excel file: 'Date'", "timestamp": "2025-02-11T19:36:18.190168", "context": {}}
____________________________ test_project_interface ____________________________

    def test_project_interface():
        """Test Project interface matches API response"""
        response = client.get("/projects")
>       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <Response [500 Internal Server Error]>.status_code

tests/test_interfaces.py:55: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:18.477043", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "GET", "url": "http://testserver/projects", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/projects"}}
{"timestamp": "2025-02-11T19:36:18.477935", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Database session created", "context": {}}
{"timestamp": "2025-02-11T19:36:18.478336", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "ProjectRepository initialized", "context": {}}
{"timestamp": "2025-02-11T19:36:18.478623", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "ProjectService initialized with database session", "context": {}}
{"timestamp": "2025-02-11T19:36:18.479138", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Fetching projects with offset=0, limit=100", "context": {}}
{"timestamp": "2025-02-11T19:36:18.479531", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Fetching all projects with skip=0, limit=100", "context": {}}
{"timestamp": "2025-02-11T19:36:18.852007", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Retrieved 6 projects", "context": {}}
{"timestamp": "2025-02-11T19:36:18.852278", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Retrieved 6 projects", "context": {}}
{"timestamp": "2025-02-11T19:36:18.854046", "level": "ERROR", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Database session error: 6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n", "context": {}}
{"timestamp": "2025-02-11T19:36:18.856696", "level": "ERROR", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Database session error details:", "context": {}, "exception": "Traceback (most recent call last):\n  File \"/home/runner/workspace/database/database.py\", line 113, in get_db\n    yield db\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/concurrency.py\", line 27, in contextmanager_in_threadpool\n    yield await run_in_threadpool(cm.__enter__)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py\", line 327, in app\n    content = await serialize_response(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py\", line 176, in serialize_response\n    raise ResponseValidationError(\nfastapi.exceptions.ResponseValidationError: 6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n"}
{"timestamp": "2025-02-11T19:36:18.878931", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Database session closed", "context": {}}
{"timestamp": "2025-02-11T19:36:18.881723", "level": "ERROR", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request failed with exception", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "error_type": "ResponseValidationError", "error_message": "6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n", "traceback": "Traceback (most recent call last):\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 111, in receive\n    return self.receive_nowait()\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 106, in receive_nowait\n    raise WouldBlock\nanyio.WouldBlock\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 124, in receive\n    return receiver.item\n           ^^^^^^^^^^^^^\nAttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/base.py\", line 157, in call_next\n    message = await recv_stream.receive()\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 126, in receive\n    raise EndOfStream\nanyio.EndOfStream\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/workspace/utils/middleware.py\", line 45, in logging_middleware\n    response = await call_next(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/base.py\", line 163, in call_next\n    raise app_exc\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/base.py\", line 149, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 85, in __call__\n    await self.app(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 715, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 735, in app\n    await route.handle(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py\", line 327, in app\n    content = await serialize_response(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py\", line 176, in serialize_response\n    raise ResponseValidationError(\nfastapi.exceptions.ResponseValidationError: 6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n\n", "request_method": "GET", "request_url": "http://testserver/projects", "request_headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient"}, "client_host": "testclient", "query_params": {}, "path_params": {}, "path": "/projects", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T19:36:18.882321", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "GET", "path": "/projects", "status_code": 500}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:18.477160", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "GET", "url": "http://testserver/projects", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/projects"}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Database session created", "timestamp": "2025-02-11T19:36:18.477997", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "ProjectRepository initialized", "timestamp": "2025-02-11T19:36:18.478423", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "ProjectService initialized with database session", "timestamp": "2025-02-11T19:36:18.478692", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Fetching projects with offset=0, limit=100", "timestamp": "2025-02-11T19:36:18.479353", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Fetching all projects with skip=0, limit=100", "timestamp": "2025-02-11T19:36:18.479592", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Retrieved 6 projects", "timestamp": "2025-02-11T19:36:18.852136", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Retrieved 6 projects", "timestamp": "2025-02-11T19:36:18.852360", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Database session error: 6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n", "timestamp": "2025-02-11T19:36:18.854161", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Database session error details:", "timestamp": "2025-02-11T19:36:18.857657", "context": {}}
Traceback (most recent call last):
  File "/home/runner/workspace/database/database.py", line 113, in get_db
    yield db
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/concurrency.py", line 27, in contextmanager_in_threadpool
    yield await run_in_threadpool(cm.__enter__)
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 6 validation errors:
  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}
  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}

DEBUG    TimesheetTracker:logger.py:32 {"message": "Database session closed", "timestamp": "2025-02-11T19:36:18.879032", "context": {}}
ERROR    TimesheetTracker:logger.py:29 {"message": "Request failed with exception", "timestamp": "2025-02-11T19:36:18.881975", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "error_type": "ResponseValidationError", "error_message": "6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n", "traceback": "Traceback (most recent call last):\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 111, in receive\n    return self.receive_nowait()\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 106, in receive_nowait\n    raise WouldBlock\nanyio.WouldBlock\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 124, in receive\n    return receiver.item\n           ^^^^^^^^^^^^^\nAttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/base.py\", line 157, in call_next\n    message = await recv_stream.receive()\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/anyio/streams/memory.py\", line 126, in receive\n    raise EndOfStream\nanyio.EndOfStream\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/runner/workspace/utils/middleware.py\", line 45, in logging_middleware\n    response = await call_next(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/base.py\", line 163, in call_next\n    raise app_exc\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/base.py\", line 149, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 85, in __call__\n    await self.app(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 715, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 735, in app\n    await route.handle(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 53, in wrapped_app\n    raise exc\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 42, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py\", line 327, in app\n    content = await serialize_response(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/fastapi/routing.py\", line 176, in serialize_response\n    raise ResponseValidationError(\nfastapi.exceptions.ResponseValidationError: 6 validation errors:\n  {'type': 'string_type', 'loc': ('response', 0, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 1, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 2, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 3, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 4, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n  {'type': 'string_type', 'loc': ('response', 5, 'project_manager'), 'msg': 'Input should be a valid string', 'input': None}\n\n", "request_method": "GET", "request_url": "http://testserver/projects", "request_headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient"}, "client_host": "testclient", "query_params": {}, "path_params": {}, "path": "/projects", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:18.882428", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "GET", "path": "/projects", "status_code": 500}}
____________________________ test_model_timestamps _____________________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7bc74b4d0>

    def test_model_timestamps(db_session):
        """Test model timestamps are automatically set"""
        customer = Customer(
            name="Timestamp Test",
            contact_email="timestamp@test.com"
        )
        db_session.add(customer)
        db_session.commit()
    
        assert customer.created_at is not None
        assert customer.updated_at is None  # Should be None until updated
    
        customer.industry = "Updated Industry"
        db_session.commit()
    
        assert customer.updated_at is not None  # Should be set after update
>       assert customer.updated_at > customer.created_at
E       assert datetime.datetime(2025, 2, 11, 19, 36, 18) > datetime.datetime(2025, 2, 11, 19, 36, 18)
E        +  where datetime.datetime(2025, 2, 11, 19, 36, 18) = <models.customerModel.Customer object at 0x7fa7bd0b2f10>.updated_at
E        +  and   datetime.datetime(2025, 2, 11, 19, 36, 18) = <models.customerModel.Customer object at 0x7fa7bd0b2f10>.created_at

tests/test_models.py:130: AssertionError
______________________ test_time_entry_repository_create _______________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7bc739fd0>

    def test_time_entry_repository_create(db_session):
        """Test creating a time entry through repository"""
        repo = TimeEntryRepository()
        entry = TimeEntry(
            week_number=1,
            month="January",
            category="Development",
            subcategory="Coding",
            customer="TestCustomer",
            project="TestProject",
            task_description="Test entry",
            hours=8.0,
            date=date(2024, 1, 1)
        )
    
>       result = repo.create(db_session, entry)

tests/test_repositories.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7bc739710>
db = <sqlalchemy.orm.session.Session object at 0x7fa7bc739fd0>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
_____________________ test_time_entry_repository_get_by_id _____________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7bd0b3410>

    def test_time_entry_repository_get_by_id(db_session):
        """Test retrieving a time entry by ID"""
        repo = TimeEntryRepository()
        entry = TimeEntry(
            week_number=1,
            month="January",
            category="Development",
            subcategory="Coding",
            customer="TestCustomer",
            project="TestProject",
            task_description="Test entry",
            hours=8.0,
            date=date(2024, 1, 1)
        )
    
>       created = repo.create(db_session, entry)

tests/test_repositories.py:179: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7bd0b3310>
db = <sqlalchemy.orm.session.Session object at 0x7fa7bd0b3410>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
____________________ test_time_entry_repository_get_by_date ____________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7bc531350>

    def test_time_entry_repository_get_by_date(db_session):
        """Test retrieving time entries by date"""
        repo = TimeEntryRepository()
        entry_date = date(2024, 1, 1)
        entry = TimeEntry(
            week_number=1,
            month="January",
            category="Development",
            subcategory="Coding",
            customer="TestCustomer",
            project="TestProject",
            task_description="Test entry",
            hours=8.0,
            date=entry_date
        )
    
>       repo.create(db_session, entry)

tests/test_repositories.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7bc533750>
db = <sqlalchemy.orm.session.Session object at 0x7fa7bc531350>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
______________________ test_time_entry_repository_get_all ______________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7bc702f50>

    def test_time_entry_repository_get_all(db_session):
        """Test retrieving all time entries"""
        repo = TimeEntryRepository()
        entries = [
            TimeEntry(
                week_number=1,
                month="January",
                category="Development",
                subcategory="Coding",
                customer=f"TestCustomer{i}",
                project=f"TestProject{i}",
                task_description=f"Entry {i}",
                hours=8.0,
                date=date(2024, 1, 1)
            ) for i in range(3)
        ]
    
        for entry in entries:
>           repo.create(db_session, entry)

tests/test_repositories.py:228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7bc701d90>
db = <sqlalchemy.orm.session.Session object at 0x7fa7bc702f50>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject0)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
______________________ test_time_entry_repository_update _______________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7b6dd0ad0>

    def test_time_entry_repository_update(db_session):
        """Test updating a time entry"""
        repo = TimeEntryRepository()
        entry = TimeEntry(
            week_number=1,
            month="January",
            category="Development",
            subcategory="Coding",
            customer="TestCustomer",
            project="TestProject",
            task_description="Original description",
            hours=8.0,
            date=date(2024, 1, 1)
        )
    
>       created = repo.create(db_session, entry)

tests/test_repositories.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7b6dd1350>
db = <sqlalchemy.orm.session.Session object at 0x7fa7b6dd0ad0>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
______________________ test_time_entry_repository_delete _______________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7bd0f6e10>

    def test_time_entry_repository_delete(db_session):
        """Test deleting a time entry"""
        repo = TimeEntryRepository()
        entry = TimeEntry(
            week_number=1,
            month="January",
            category="Development",
            subcategory="Coding",
            customer="TestCustomer",
            project="TestProject",
            task_description="Test entry",
            hours=8.0,
            date=date(2024, 1, 1)
        )
    
>       created = repo.create(db_session, entry)

tests/test_repositories.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7bd0f4610>
db = <sqlalchemy.orm.session.Session object at 0x7fa7bd0f6e10>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
____________________ test_time_entry_repository_pagination _____________________

db_session = <sqlalchemy.orm.session.Session object at 0x7fa7be37af10>

    def test_time_entry_repository_pagination(db_session):
        """Test time entry repository pagination"""
        repo = TimeEntryRepository()
        # Create 5 time entries
        for i in range(5):
            entry = TimeEntry(
                week_number=1,
                month="January",
                category="Development",
                subcategory="Coding",
                customer=f"TestCustomer{i}",
                project=f"TestProject{i}",
                task_description=f"Entry {i}",
                hours=8.0,
                date=date(2024, 1, 1)
            )
>           repo.create(db_session, entry)

tests/test_repositories.py:299: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <database.timesheet_repository.TimeEntryRepository object at 0x7fa7bd0d5f90>
db = <sqlalchemy.orm.session.Session object at 0x7fa7be37af10>
data = <TimeEntry(id=None, date=2024-01-01, hours=8.0, project=TestProject0)>

    def create(self, db: Session, data: schemas.TimeEntryCreate) -> TimeEntry:
        """Create a new time entry from Pydantic model."""
>       entry_dict = data.model_dump(exclude={'id', 'created_at', 'updated_at'})
E       AttributeError: 'TimeEntry' object has no attribute 'model_dump'

database/timesheet_repository.py:18: AttributeError
____________________________ test_create_time_entry ____________________________

client = <starlette.testclient.TestClient object at 0x7fa7bc743850>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7fa7bc74b590>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}

    def test_create_time_entry(client, setup_test_data):
        """Test creating a single time entry"""
        entry_data = {
            "week_number": 41,
            "month": "October",
            "category": "Other",
            "subcategory": "Other Training",
            "customer": "ECOLAB",
            "project": "Project_Magic_Bullet",
            "task_description": "Test task",
            "hours": 8.0,
            "date": "2024-10-07"
        }
        response = client.post("/time-entries/", json=entry_data)
>       assert response.status_code == 201
E       assert 200 == 201
E        +  where 200 = <Response [200 OK]>.status_code

tests/test_routes.py:38: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:19.576920", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "202", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/"}}
{"timestamp": "2025-02-11T19:36:19.577786", "level": "WARNING", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request failed with status 307", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 307, "method": "POST", "url": "http://testserver/time-entries/", "process_time_ms": "1.01", "response_headers": {"content-length": "0", "location": "http://testserver/time-entries"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T19:36:19.578581", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/", "status_code": 307}}
{"timestamp": "2025-02-11T19:36:19.580554", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "202", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries"}}
{"timestamp": "2025-02-11T19:36:19.585864", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T19:36:19.610415", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request completed successfully", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 200, "process_time_ms": "29.83", "response_headers": {"content-length": "262", "content-type": "application/json"}, "content_type": "application/json", "method": "POST", "path": "/time-entries"}}
{"timestamp": "2025-02-11T19:36:19.610965", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries", "status_code": 200}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.577082", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "202", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/"}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 307", "timestamp": "2025-02-11T19:36:19.578018", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 307, "method": "POST", "url": "http://testserver/time-entries/", "process_time_ms": "1.01", "response_headers": {"content-length": "0", "location": "http://testserver/time-entries"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:19.578661", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/", "status_code": 307}}
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.580644", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "202", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries"}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T19:36:19.585958", "context": {}}
INFO     TimesheetTracker:logger.py:29 {"message": "Request completed successfully", "timestamp": "2025-02-11T19:36:19.610570", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 200, "process_time_ms": "29.83", "response_headers": {"content-length": "262", "content-type": "application/json"}, "content_type": "application/json", "method": "POST", "path": "/time-entries"}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:19.611061", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries", "status_code": 200}}
__________________ test_get_time_entries_with_database_query ___________________

client = <starlette.testclient.TestClient object at 0x7fa7bc701890>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7fa7e12daa90>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}

    def test_get_time_entries_with_database_query(client, setup_test_data):
        """Test getting time entries with database query verification"""
        # Create multiple test entries first
        entries = [
            {
                "week_number": 41,
                "month": "October",
                "category": "Development",
                "subcategory": "Coding",
                "customer": "ECOLAB",
                "project": "Project_Magic_Bullet",
                "task_description": "Task 1",
                "hours": 8.0,
                "date": "2024-10-07"
            },
            {
                "week_number": 41,
                "month": "October",
                "category": "Development",
                "subcategory": "Testing",
                "customer": "ECOLAB",
                "project": "Project_Magic_Bullet",
                "task_description": "Task 2",
                "hours": 4.0,
                "date": "2024-10-07"
            }
        ]
    
        # Add entries to database
        for entry in entries:
            response = client.post("/time-entries/", json=entry)
>           assert response.status_code == 201
E           assert 200 == 201
E            +  where 200 = <Response [200 OK]>.status_code

tests/test_routes.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:19.706773", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "197", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/"}}
{"timestamp": "2025-02-11T19:36:19.707751", "level": "WARNING", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request failed with status 307", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 307, "method": "POST", "url": "http://testserver/time-entries/", "process_time_ms": "1.07", "response_headers": {"content-length": "0", "location": "http://testserver/time-entries"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T19:36:19.708296", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/", "status_code": 307}}
{"timestamp": "2025-02-11T19:36:19.710441", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "197", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries"}}
{"timestamp": "2025-02-11T19:36:19.712385", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T19:36:19.749456", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request completed successfully", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 200, "process_time_ms": "38.91", "response_headers": {"content-length": "257", "content-type": "application/json"}, "content_type": "application/json", "method": "POST", "path": "/time-entries"}}
{"timestamp": "2025-02-11T19:36:19.750134", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries", "status_code": 200}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.706946", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "197", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/"}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 307", "timestamp": "2025-02-11T19:36:19.707894", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 307, "method": "POST", "url": "http://testserver/time-entries/", "process_time_ms": "1.07", "response_headers": {"content-length": "0", "location": "http://testserver/time-entries"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:19.708397", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/", "status_code": 307}}
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.710585", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "197", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries"}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T19:36:19.712477", "context": {}}
INFO     TimesheetTracker:logger.py:29 {"message": "Request completed successfully", "timestamp": "2025-02-11T19:36:19.749682", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 200, "process_time_ms": "38.91", "response_headers": {"content-length": "257", "content-type": "application/json"}, "content_type": "application/json", "method": "POST", "path": "/time-entries"}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:19.750256", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries", "status_code": 200}}
___________________ test_get_time_entries_complex_filtering ____________________

client = <starlette.testclient.TestClient object at 0x7fa7bc73f1d0>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7fa7bc73d690>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}

    def test_get_time_entries_complex_filtering(client, setup_test_data):
        """Test time entries with multiple filter combinations"""
        # Create test entries with different combinations
        entries = [
            {
                "week_number": 41,
                "month": "October",
                "category": "Development",
                "subcategory": "Coding",
                "customer": "ECOLAB",
                "project": "Project_Magic_Bullet",
                "task_description": "Dev Task",
                "hours": 8.0,
                "date": "2024-10-07"
            },
            {
                "week_number": 41,
                "month": "October",
                "category": "QA",
                "subcategory": "Testing",
                "customer": "ECOLAB",
                "project": "Project_Magic_Bullet",
                "task_description": "QA Task",
                "hours": 4.0,
                "date": "2024-10-07"
            }
        ]
    
        for entry in entries:
            response = client.post("/time-entries/", json=entry)
>           assert response.status_code == 201
E           assert 200 == 201
E            +  where 200 = <Response [200 OK]>.status_code

tests/test_routes.py:118: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:19.836880", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "199", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/"}}
{"timestamp": "2025-02-11T19:36:19.837709", "level": "WARNING", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request failed with status 307", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 307, "method": "POST", "url": "http://testserver/time-entries/", "process_time_ms": "0.94", "response_headers": {"content-length": "0", "location": "http://testserver/time-entries"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T19:36:19.838304", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/", "status_code": 307}}
{"timestamp": "2025-02-11T19:36:19.840069", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "199", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries"}}
{"timestamp": "2025-02-11T19:36:19.842250", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T19:36:19.871459", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request completed successfully", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 200, "process_time_ms": "31.29", "response_headers": {"content-length": "259", "content-type": "application/json"}, "content_type": "application/json", "method": "POST", "path": "/time-entries"}}
{"timestamp": "2025-02-11T19:36:19.871921", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries", "status_code": 200}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.837042", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "199", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/"}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 307", "timestamp": "2025-02-11T19:36:19.837949", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 307, "method": "POST", "url": "http://testserver/time-entries/", "process_time_ms": "0.94", "response_headers": {"content-length": "0", "location": "http://testserver/time-entries"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:19.838413", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/", "status_code": 307}}
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.840160", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "199", "content-type": "application/json"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries"}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T19:36:19.842319", "context": {}}
INFO     TimesheetTracker:logger.py:29 {"message": "Request completed successfully", "timestamp": "2025-02-11T19:36:19.871592", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 200, "process_time_ms": "31.29", "response_headers": {"content-length": "259", "content-type": "application/json"}, "content_type": "application/json", "method": "POST", "path": "/time-entries"}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:19.872019", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries", "status_code": 200}}
___________________________ test_upload_excel_valid ____________________________

client = <starlette.testclient.TestClient object at 0x7fa7bc210290>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7fa7bc212790>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}
tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-3/test_upload_excel_valid1')

    def test_upload_excel_valid(client, setup_test_data, tmp_path):
        """Test uploading a valid Excel file"""
        import pandas as pd
    
        # Create test Excel file
        excel_data = {
            'Week Number': [41, 41],
            'Month': ['October', 'October'],
            'Category': ['Other', 'Other'],
            'Subcategory': ['Other Training', 'Other Training'],
            'Customer': ['ECOLAB', 'ECOLAB'],
            'Project': ['Project_Magic_Bullet', 'Project_Magic_Bullet'],
            'Task Description': ['Test task', 'Another task'],
            'Hours': [8.0, 4.0],
            'Date': ['2024-10-07', '2024-10-07']
        }
        df = pd.DataFrame(excel_data)
        excel_file = tmp_path / "test.xlsx"
        df.to_excel(excel_file, index=False)
    
        with open(excel_file, "rb") as f:
            response = client.post(
                "/time-entries/upload/",
                files={"file": ("test.xlsx", f, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")}
            )
    
        assert response.status_code == 201
        data = response.json()
        assert len(data["entries"]) == 2
>       assert data["validation_errors"] == []
E       KeyError: 'validation_errors'

tests/test_routes.py:199: KeyError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T19:36:19.975115", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5382", "content-type": "multipart/form-data; boundary=ce4489881fd1fbb167291c7f84a826ee"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
{"timestamp": "2025-02-11T19:36:19.977620", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T19:36:19.977911", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T19:36:19.978163", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T19:36:19.987603", "level": "INFO", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Successfully parsed 2 records from Excel file", "context": {}}
{"timestamp": "2025-02-11T19:36:20.016060", "level": "WARNING", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Request failed with status 201", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 201, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "40.94", "response_headers": {"content-length": "586", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T19:36:20.016755", "level": "DEBUG", "correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/upload/", "status_code": 201}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T19:36:19.975291", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5382", "content-type": "multipart/form-data; boundary=ce4489881fd1fbb167291c7f84a826ee"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T19:36:19.977730", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T19:36:19.978011", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T19:36:19.978257", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 2 records from Excel file", "timestamp": "2025-02-11T19:36:19.987691", "context": {}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 201", "timestamp": "2025-02-11T19:36:20.016285", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "status_code": 201, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "40.94", "response_headers": {"content-length": "586", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T19:36:20.016864", "context": {"correlation_id": "23c1b0ed-af09-4132-a985-e23d0c0e3a63", "method": "POST", "path": "/time-entries/upload/", "status_code": 201}}
=============================== warnings summary ===============================
.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:345
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:345: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

tests/test_file_upload.py::test_xls_analyzer_invalid_data
tests/test_file_upload.py::test_upload_excel_valid
tests/test_file_upload.py::test_xls_analyzer_missing_columns
tests/test_routes.py::test_upload_excel_valid
  /home/runner/workspace/utils/xls_analyzer.py:15: FutureWarning: Passing bytes to 'read_excel' is deprecated and will be removed in a future version. To read from a byte string, wrap it in a `BytesIO` object.
    df = pd.read_excel(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_file_upload.py::test_xls_analyzer_invalid_data - KeyError: ...
FAILED tests/test_file_upload.py::test_upload_excel_valid - KeyError: 'valida...
FAILED tests/test_file_upload.py::test_xls_analyzer_missing_columns - ValueEr...
FAILED tests/test_interfaces.py::test_project_interface - assert 500 == 200
FAILED tests/test_models.py::test_model_timestamps - assert datetime.datetime...
FAILED tests/test_repositories.py::test_time_entry_repository_create - Attrib...
FAILED tests/test_repositories.py::test_time_entry_repository_get_by_id - Att...
FAILED tests/test_repositories.py::test_time_entry_repository_get_by_date - A...
FAILED tests/test_repositories.py::test_time_entry_repository_get_all - Attri...
FAILED tests/test_repositories.py::test_time_entry_repository_update - Attrib...
FAILED tests/test_repositories.py::test_time_entry_repository_delete - Attrib...
FAILED tests/test_repositories.py::test_time_entry_repository_pagination - At...
FAILED tests/test_routes.py::test_create_time_entry - assert 200 == 201
FAILED tests/test_routes.py::test_get_time_entries_with_database_query - asse...
FAILED tests/test_routes.py::test_get_time_entries_complex_filtering - assert...
FAILED tests/test_routes.py::test_upload_excel_valid - KeyError: 'validation_...
================= 16 failed, 6 deselected, 5 warnings in 6.92s =================
