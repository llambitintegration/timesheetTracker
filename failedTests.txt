============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: anyio-4.7.0, asyncio-0.25.2, cov-6.0.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collecting ... collected 33 items / 6 deselected / 27 selected
run-last-failure: rerun previous 27 failures (skipped 7 files)

tests/test_file_upload.py::test_dash_customer_handling FAILED            [  3%]
tests/test_routes.py::test_get_time_entries_complex_filtering PASSED     [  7%]
tests/test_routes.py::test_get_time_entries_empty_database PASSED        [ 11%]
tests/test_routes.py::test_get_time_entries_invalid_filters PASSED       [ 14%]
tests/test_routes.py::test_create_time_entry_invalid_data PASSED         [ 18%]
tests/test_routes.py::test_upload_excel_valid PASSED                     [ 22%]
tests/test_routes.py::test_get_time_entries_with_filters PASSED          [ 25%]
tests/test_routes.py::test_get_time_entries_pagination PASSED            [ 29%]
tests/test_services.py::test_create_time_entry PASSED                    [ 33%]
tests/test_services.py::test_create_time_entry_with_defaults PASSED      [ 37%]
tests/test_services.py::test_create_many_entries PASSED                  [ 40%]
tests/test_services.py::test_get_time_entries PASSED                     [ 44%]
tests/test_services.py::test_get_time_entries_pagination PASSED          [ 48%]
tests/test_time_entry.py::test_create_time_entry_auto_calculations PASSED [ 51%]
tests/test_time_entry.py::test_create_time_entry_default_hours PASSED    [ 55%]
tests/test_time_entry.py::test_create_time_entry_auto_id PASSED          [ 59%]
tests/test_time_entry.py::test_create_single_time_entry PASSED           [ 62%]
tests/test_time_entry.py::test_create_time_entry_with_defaults PASSED    [ 66%]
tests/test_time_entry.py::test_create_time_entry_invalid_hours PASSED    [ 70%]
tests/test_time_entry.py::test_create_time_entry_with_nonexistent_customer PASSED [ 74%]
tests/test_time_entry.py::test_create_time_entry_customer_mismatch PASSED [ 77%]
tests/test_time_entry.py::test_get_time_entries_with_filters PASSED      [ 81%]
tests/test_time_entry.py::test_api_example_default_values PASSED         [ 85%]
tests/test_time_entry.py::test_time_entry_date_validation PASSED         [ 88%]
tests/test_time_entry.py::test_create_time_entry_zero_hours PASSED       [ 92%]
tests/test_time_entry.py::test_create_time_entry_auto_date_calculations PASSED [ 96%]
tests/test_validators.py::test_normalize_customer_name_dash_conversion FAILED [100%]

=================================== FAILURES ===================================
_________________________ test_dash_customer_handling __________________________

client = <starlette.testclient.TestClient object at 0x7fe2f050f350>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7fe2f0564f90>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}
tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-43/test_dash_customer_handling0')

    def test_dash_customer_handling(client, setup_test_data, tmp_path):
        """Test handling of dash (-) values in customer field"""
        data = {
            'Category': ['Development'],
            'Customer': ['-'],
            'Project': ['-'],
            'Hours': [8.0],
            'Date': ['2024-10-07']
        }
        excel_file = create_test_excel(tmp_path, data)
    
        with open(excel_file, "rb") as f:
            response = client.post(
                "/time-entries/upload/",
                files={"file": ("test.xlsx", f, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")}
            )
    
        assert response.status_code == 201
        entries = response.json()["entries"]
        assert len(entries) == 1
>       assert entries[0]["customer"] is None
E       AssertionError: assert 'Unassigned' is None

tests/test_file_upload.py:96: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:29:07.052081", "level": "INFO", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5237", "content-type": "multipart/form-data; boundary=375235f08a0ea7c5824eb6b11e2b818d"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
{"timestamp": "2025-02-11T20:29:07.054255", "level": "INFO", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:29:07.054609", "level": "DEBUG", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T20:29:07.054790", "level": "INFO", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:29:07.068870", "level": "INFO", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Successfully parsed 1 records from Excel file", "context": {}}
{"timestamp": "2025-02-11T20:29:07.096945", "level": "WARNING", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Request failed with status 201", "context": {"correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "status_code": 201, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "44.72", "response_headers": {"content-length": "317", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T20:29:07.097478", "level": "DEBUG", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": null, "method": "POST", "path": "/time-entries/upload/", "status_code": 201}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T20:29:07.052248", "context": {"correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5237", "content-type": "multipart/form-data; boundary=375235f08a0ea7c5824eb6b11e2b818d"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:29:07.054388", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T20:29:07.054674", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:29:07.054856", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 1 records from Excel file", "timestamp": "2025-02-11T20:29:07.068981", "context": {}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 201", "timestamp": "2025-02-11T20:29:07.097080", "context": {"correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "status_code": 201, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "44.72", "response_headers": {"content-length": "317", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T20:29:07.097587", "context": {"correlation_id": null, "method": "POST", "path": "/time-entries/upload/", "status_code": 201}}
_________________ test_normalize_customer_name_dash_conversion _________________

    def test_normalize_customer_name_dash_conversion():
        """Test that dash values are properly normalized to default customer"""
        from utils.validators import normalize_customer_name, DEFAULT_CUSTOMER
    
        # Test various dash/empty scenarios
>       assert normalize_customer_name('-') == DEFAULT_CUSTOMER
E       AssertionError: assert None == 'Unassigned'
E        +  where None = <function normalize_customer_name at 0x7fe2f2184680>('-')

tests/test_validators.py:7: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:29:10.159168", "level": "DEBUG", "correlation_id": "b6d97769-b2cc-4b6a-9572-a322aa3d403f", "logger": "TimesheetTracker", "message": "Converting empty/invalid customer name to None", "context": {}}
------------------------------ Captured log call -------------------------------
DEBUG    TimesheetTracker:logger.py:32 {"message": "Converting empty/invalid customer name to None", "timestamp": "2025-02-11T20:29:10.159275", "context": {}}
=============================== warnings summary ===============================
.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:345
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:345: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_file_upload.py::test_dash_customer_handling - AssertionErro...
FAILED tests/test_validators.py::test_normalize_customer_name_dash_conversion
============ 2 failed, 25 passed, 6 deselected, 1 warning in 5.04s =============
