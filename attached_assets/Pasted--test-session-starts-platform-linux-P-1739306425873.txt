============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0 -- /home/runner/workspace/.pythonlibs/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/workspace
configfile: pyproject.toml
plugins: anyio-4.7.0, asyncio-0.25.2, cov-6.0.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None
collecting ... collected 12 items / 6 deselected / 6 selected
run-last-failure: rerun previous 6 failures (skipped 9 files)

tests/test_file_upload.py::test_xls_analyzer_invalid_data FAILED         [ 16%]
tests/test_file_upload.py::test_dash_customer_handling FAILED            [ 33%]
tests/test_file_upload.py::test_upload_excel_valid FAILED                [ 50%]
tests/test_file_upload.py::test_xls_analyzer_missing_columns FAILED      [ 66%]
tests/test_routes.py::test_upload_excel_valid FAILED                     [ 83%]
tests/test_xls_analyzer.py::test_xls_analyzer_dash_to_none_conversion FAILED [100%]

=================================== FAILURES ===================================
________________________ test_xls_analyzer_invalid_data ________________________

tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-52/test_xls_analyzer_invalid_data0')
invalid_timesheet_data = {'Category': ['Development'], 'Date': ['2024-10-07'], 'Hours': [8.0]}
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7f7cd7b4be10>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}

    def test_xls_analyzer_invalid_data(tmp_path, invalid_timesheet_data, setup_test_data):
        """Test XLSAnalyzer with invalid data"""
        excel_file = create_test_excel(tmp_path, invalid_timesheet_data)
    
        with open(excel_file, "rb") as f:
            contents = f.read()
            analyzer = XLSAnalyzer()
            records = analyzer.read_excel(contents)
    
            assert len(records) == 1
>           assert records[0]['Customer'] is None
E           AssertionError: assert 'Unassigned' is None

tests/test_file_upload.py:73: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:38:57.131254", "level": "INFO", "correlation_id": "undefined", "logger": "TimesheetTracker", "message": "Successfully parsed 1 records from Excel file", "context": {}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 1 records from Excel file", "timestamp": "2025-02-11T20:38:57.131429", "context": {}}
_________________________ test_dash_customer_handling __________________________

client = <starlette.testclient.TestClient object at 0x7f7cd6107790>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7f7cd613d5d0>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}
tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-52/test_dash_customer_handling0')

    def test_dash_customer_handling(client, setup_test_data, tmp_path):
        """Test handling of dash (-) values in customer field"""
        data = {
            'Category': ['Development'],
            'Customer': ['-'],
            'Project': ['-'],
            'Hours': [8.0],
            'Date': ['2024-10-07']
        }
        excel_file = create_test_excel(tmp_path, data)
    
        with open(excel_file, "rb") as f:
            response = client.post(
                "/time-entries/upload/",
                files={"file": ("test.xlsx", f, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")}
            )
    
>       assert response.status_code == 201
E       assert 400 == 201
E        +  where 400 = <Response [400 Bad Request]>.status_code

tests/test_file_upload.py:93: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:38:57.276602", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5238", "content-type": "multipart/form-data; boundary=f37d9621034c14e5321d03e2d617d960"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
{"timestamp": "2025-02-11T20:38:57.279375", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:38:57.279783", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T20:38:57.280065", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:38:57.290516", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Successfully parsed 1 records from Excel file", "context": {}}
{"timestamp": "2025-02-11T20:38:57.328959", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing 1 entries", "context": {}}
{"timestamp": "2025-02-11T20:38:57.329262", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Starting database reference validation", "context": {}}
{"timestamp": "2025-02-11T20:38:57.329559", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processed entry: customer=Unassigned, project=Unassigned", "context": {}}
{"timestamp": "2025-02-11T20:38:57.329849", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.330276", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.330575", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.331452", "level": "WARNING", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Request failed with status 400", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "status_code": 400, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "54.95", "response_headers": {"content-length": "83", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T20:38:57.331931", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": null, "method": "POST", "path": "/time-entries/upload/", "status_code": 400}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T20:38:57.277099", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5238", "content-type": "multipart/form-data; boundary=f37d9621034c14e5321d03e2d617d960"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:38:57.279622", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T20:38:57.279935", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:38:57.280178", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 1 records from Excel file", "timestamp": "2025-02-11T20:38:57.290715", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing 1 entries", "timestamp": "2025-02-11T20:38:57.329106", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Starting database reference validation", "timestamp": "2025-02-11T20:38:57.329365", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Processed entry: customer=Unassigned, project=Unassigned", "timestamp": "2025-02-11T20:38:57.329654", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.329950", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.330376", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.330677", "context": {}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 400", "timestamp": "2025-02-11T20:38:57.331602", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "status_code": 400, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "54.95", "response_headers": {"content-length": "83", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T20:38:57.332013", "context": {"correlation_id": null, "method": "POST", "path": "/time-entries/upload/", "status_code": 400}}
___________________________ test_upload_excel_valid ____________________________

client = <starlette.testclient.TestClient object at 0x7f7cd6138110>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7f7cd6124cd0>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}
tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-52/test_upload_excel_valid0')
valid_timesheet_data = {'Category': ['Development', 'Testing'], 'Customer': ['ECOLAB', 'ECOLAB'], 'Date': ['2024-10-07', '2024-10-07'], 'Hours': [8.0, 4.0], ...}

    def test_upload_excel_valid(client, setup_test_data, tmp_path, valid_timesheet_data):
        """Test uploading a valid Excel file"""
        excel_file = create_test_excel(tmp_path, valid_timesheet_data)
    
        with open(excel_file, "rb") as f:
            response = client.post(
                "/time-entries/upload/",
                files={"file": ("test.xlsx", f, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")}
            )
    
>       assert response.status_code == 201
E       assert 400 == 201
E        +  where 400 = <Response [400 Bad Request]>.status_code

tests/test_file_upload.py:109: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:38:57.513315", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5398", "content-type": "multipart/form-data; boundary=72424d945f3fd72d6be506ce14881792"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
{"timestamp": "2025-02-11T20:38:57.520950", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:38:57.521418", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T20:38:57.521830", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:38:57.533000", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Successfully parsed 2 records from Excel file", "context": {}}
{"timestamp": "2025-02-11T20:38:57.563254", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing 2 entries", "context": {}}
{"timestamp": "2025-02-11T20:38:57.563556", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Starting database reference validation", "context": {}}
{"timestamp": "2025-02-11T20:38:57.567765", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "context": {}}
{"timestamp": "2025-02-11T20:38:57.569052", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "context": {}}
{"timestamp": "2025-02-11T20:38:57.569386", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.569935", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.570215", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.571273", "level": "WARNING", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Request failed with status 400", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "status_code": 400, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "58.07", "response_headers": {"content-length": "83", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T20:38:57.571862", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "path": "/time-entries/upload/", "status_code": 400}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T20:38:57.513476", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5398", "content-type": "multipart/form-data; boundary=72424d945f3fd72d6be506ce14881792"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:38:57.521077", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T20:38:57.521624", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:38:57.521937", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 2 records from Excel file", "timestamp": "2025-02-11T20:38:57.533141", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing 2 entries", "timestamp": "2025-02-11T20:38:57.563383", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Starting database reference validation", "timestamp": "2025-02-11T20:38:57.563655", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "timestamp": "2025-02-11T20:38:57.567930", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "timestamp": "2025-02-11T20:38:57.569178", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.569530", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.570030", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.570303", "context": {}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 400", "timestamp": "2025-02-11T20:38:57.571401", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "status_code": 400, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "58.07", "response_headers": {"content-length": "83", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T20:38:57.571984", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "path": "/time-entries/upload/", "status_code": 400}}
______________________ test_xls_analyzer_missing_columns _______________________

tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-52/test_xls_analyzer_missing_colu0')

    def test_xls_analyzer_missing_columns(tmp_path):
        """Test XLSAnalyzer with missing required columns"""
        data = {'Category': ['Test'], 'Hours': [8.0]}
        excel_file = create_test_excel(tmp_path, data)
    
        with open(excel_file, "rb") as f:
            contents = f.read()
            analyzer = XLSAnalyzer()
            records = analyzer.read_excel(contents)
    
            assert len(records) == 1
>           assert records[0]['Customer'] is None
E           AssertionError: assert 'Unassigned' is None

tests/test_file_upload.py:144: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:38:57.595893", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Successfully parsed 1 records from Excel file", "context": {}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 1 records from Excel file", "timestamp": "2025-02-11T20:38:57.596036", "context": {}}
___________________________ test_upload_excel_valid ____________________________

client = <starlette.testclient.TestClient object at 0x7f7cd7fdc510>
setup_test_data = {'customers': [<models.customerModel.Customer object at 0x7f7cd4d25bd0>, <models.customerModel.Customer object at 0x7f...project_id=Unassigned, name=Unassigned)>, <Project(id=2, project_id=Project_Magic_Bullet, name=Project Magic Bullet)>]}
tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-52/test_upload_excel_valid1')

    def test_upload_excel_valid(client, setup_test_data, tmp_path):
        """Test uploading a valid Excel file"""
        import pandas as pd
    
        # Create test Excel file
        excel_data = {
            'Week Number': [41, 41],
            'Month': ['October', 'October'],
            'Category': ['Other', 'Other'],
            'Subcategory': ['Other Training', 'Other Training'],
            'Customer': ['ECOLAB', 'ECOLAB'],
            'Project': ['Project_Magic_Bullet', 'Project_Magic_Bullet'],
            'Task Description': ['Test task', 'Another task'],
            'Hours': [8.0, 4.0],
            'Date': ['2024-10-07', '2024-10-07']
        }
        df = pd.DataFrame(excel_data)
        excel_file = tmp_path / "test.xlsx"
        df.to_excel(excel_file, index=False)
    
        with open(excel_file, "rb") as f:
            response = client.post(
                "/time-entries/upload/",
                files={"file": ("test.xlsx", f, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")}
            )
    
>       assert response.status_code == 201
E       assert 400 == 201
E        +  where 400 = <Response [400 Bad Request]>.status_code

tests/test_routes.py:196: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:38:57.676426", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Incoming request", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5383", "content-type": "multipart/form-data; boundary=c0641fb0427a559e90de2232cad9302e"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
{"timestamp": "2025-02-11T20:38:57.678581", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:38:57.678909", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "TimesheetService initialized", "context": {}}
{"timestamp": "2025-02-11T20:38:57.679138", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing timesheet upload: test.xlsx", "context": {}}
{"timestamp": "2025-02-11T20:38:57.690027", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Successfully parsed 2 records from Excel file", "context": {}}
{"timestamp": "2025-02-11T20:38:57.714748", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processing 2 entries", "context": {}}
{"timestamp": "2025-02-11T20:38:57.715070", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Starting database reference validation", "context": {}}
{"timestamp": "2025-02-11T20:38:57.717850", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "context": {}}
{"timestamp": "2025-02-11T20:38:57.719216", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "context": {}}
{"timestamp": "2025-02-11T20:38:57.719550", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.720055", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.720355", "level": "ERROR", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "context": {}}
{"timestamp": "2025-02-11T20:38:57.721597", "level": "WARNING", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Request failed with status 400", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "status_code": 400, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "44.90", "response_headers": {"content-length": "83", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
{"timestamp": "2025-02-11T20:38:57.722170", "level": "DEBUG", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Adding CORS headers to response", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "path": "/time-entries/upload/", "status_code": 400}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:29 {"message": "Incoming request", "timestamp": "2025-02-11T20:38:57.676708", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "url": "http://testserver/time-entries/upload/", "client_host": "testclient", "headers": {"host": "testserver", "accept": "*/*", "accept-encoding": "gzip, deflate", "connection": "keep-alive", "user-agent": "testclient", "content-length": "5383", "content-type": "multipart/form-data; boundary=c0641fb0427a559e90de2232cad9302e"}, "path_params": {}, "query_params": {}, "request_id": null, "path": "/time-entries/upload/"}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:38:57.678723", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "TimesheetService initialized", "timestamp": "2025-02-11T20:38:57.678971", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing timesheet upload: test.xlsx", "timestamp": "2025-02-11T20:38:57.679223", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 2 records from Excel file", "timestamp": "2025-02-11T20:38:57.690292", "context": {}}
INFO     TimesheetTracker:logger.py:32 {"message": "Processing 2 entries", "timestamp": "2025-02-11T20:38:57.714877", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Starting database reference validation", "timestamp": "2025-02-11T20:38:57.715173", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "timestamp": "2025-02-11T20:38:57.717957", "context": {}}
DEBUG    TimesheetTracker:logger.py:32 {"message": "Processed entry: customer=ECOLAB, project=Project_Magic_Bullet", "timestamp": "2025-02-11T20:38:57.719319", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.719649", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.720160", "context": {}}
ERROR    TimesheetTracker:logger.py:32 {"message": "Error processing timesheet: 400: Error during bulk creation: 'TimeEntry' object has no attribute 'dict'", "timestamp": "2025-02-11T20:38:57.720466", "context": {}}
WARNING  TimesheetTracker:logger.py:29 {"message": "Request failed with status 400", "timestamp": "2025-02-11T20:38:57.721742", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "status_code": 400, "method": "POST", "url": "http://testserver/time-entries/upload/", "process_time_ms": "44.90", "response_headers": {"content-length": "83", "content-type": "application/json"}, "error_detail": null, "query_params": {}, "path_params": {}, "client_host": "testclient", "path": "/time-entries/upload/", "origin": null, "cors_method": null, "cors_headers": null}}
DEBUG    TimesheetTracker:logger.py:29 {"message": "Adding CORS headers to response", "timestamp": "2025-02-11T20:38:57.722302", "context": {"correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "method": "POST", "path": "/time-entries/upload/", "status_code": 400}}
__________________ test_xls_analyzer_dash_to_none_conversion ___________________

tmp_path = PosixPath('/tmp/pytest-of-runner/pytest-52/test_xls_analyzer_dash_to_none0')

    def test_xls_analyzer_dash_to_none_conversion(tmp_path):
        """Test that dash values are converted to None during Excel parsing"""
        data = {
            'Category': ['Development'],
            'Customer': ['-'],
            'Project': ['-'],
            'Hours': [8.0],
            'Date': ['2024-10-07']
        }
        excel_file = create_test_excel(tmp_path, data)
    
        with open(excel_file, "rb") as f:
            contents = f.read()
            analyzer = XLSAnalyzer()
            records = analyzer.read_excel(contents)
    
            assert len(records) == 1
>           assert records[0]['Customer'] is None
E           AssertionError: assert 'Unassigned' is None

tests/test_xls_analyzer.py:22: AssertionError
----------------------------- Captured stdout call -----------------------------
{"timestamp": "2025-02-11T20:38:57.765339", "level": "INFO", "correlation_id": "b2a0ddd0-b3e8-4fdc-8339-54356cc1ba70", "logger": "TimesheetTracker", "message": "Successfully parsed 1 records from Excel file", "context": {}}
------------------------------ Captured log call -------------------------------
INFO     TimesheetTracker:logger.py:32 {"message": "Successfully parsed 1 records from Excel file", "timestamp": "2025-02-11T20:38:57.765541", "context": {}}
=============================== warnings summary ===============================
.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:345
  /home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/pydantic/_internal/_config.py:345: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_file_upload.py::test_xls_analyzer_invalid_data - AssertionE...
FAILED tests/test_file_upload.py::test_dash_customer_handling - assert 400 ==...
FAILED tests/test_file_upload.py::test_upload_excel_valid - assert 400 == 201
FAILED tests/test_file_upload.py::test_xls_analyzer_missing_columns - Asserti...
FAILED tests/test_routes.py::test_upload_excel_valid - assert 400 == 201
FAILED tests/test_xls_analyzer.py::test_xls_analyzer_dash_to_none_conversion
================== 6 failed, 6 deselected, 1 warning in 4.10s ==================
